// <auto-generated />
using DataAccessLibrary.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLibrary.Migrations
{
    [DbContext(typeof(HpmsDbContext))]
    [Migration("20250531164520_CreateStaffTable")]
    partial class CreateStaffTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLibrary.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tin")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Tin")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BathNumber")
                        .HasColumnType("int");

                    b.Property<int>("BedNumber")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("RoomTypeCategoryType")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeCategoryid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeCategoryid", "RoomTypeCategoryType");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SpecialtyType")
                        .HasColumnType("int");

                    b.Property<int>("Specialtyid")
                        .HasColumnType("int");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Specialtyid", "SpecialtyType");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.TypeCategory", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("Varchar(20)");

                    b.HasKey("id", "Type");

                    b.ToTable("TypeCategories");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UserRoleType")
                        .HasColumnType("int");

                    b.Property<int>("UserRoleid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.HasIndex("UserRoleid", "UserRoleType");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Room", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.TypeCategory", "RoomTypeCategory")
                        .WithMany()
                        .HasForeignKey("RoomTypeCategoryid", "RoomTypeCategoryType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomTypeCategory");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Staff", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.TypeCategory", "Specialty")
                        .WithMany()
                        .HasForeignKey("Specialtyid", "SpecialtyType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.User", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.TypeCategory", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleid", "UserRoleType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
